#!/sbin/openrc-run
# Copyright 2023 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

: ${PATRONI_CONFIGFILE:=/etc/patroni/patroni.yml}
: ${PG_SOCKET_DIRECTORIES:=/run/postgresq}

LOGPATH=/var/log/${RC_SVCNAME}

name="Patroni daemon"
description="Patroni instance for PostgreSQL HA cluster"
description_checkconfig="Check the configuration file"
description_reload="Reload the configuration without exiting"

command=/usr/bin/patroni
command_args="${PATRONI_CONFIGFILE}"
command_background=true
command_user="postgres:postgres"

pidfile="/run/patroni.pid"

extra_commands="checkconfig"
extra_started_commands="reload"

start_stop_daemon_args="-1 ${LOGPATH}/${RC_SVCNAME}.log	-2 ${LOGPATH}/${RC_SVCNAME}.err.log"

depend() {
	need net
}

checkconfig() {
	if [ "${PATRONI_FORCE_CHECKCONFIG}" = "yes" ]; then
		ebegin "Checking configfile (${PATRONI_CONFIGFILE})"
		${command} --validate-config ${PATRONI_CONFIGFILE}
		eend $? "Configuration error. Please fix configfile (${PATRONI_CONFIGFILE})"
	fi
}

start_pre() {
	if [ ! -d "${LOGPATH}" ] ; then
		mkdir -p "${LOGPATH}"
		chown "${command_user}" "${LOGPATH}"
	fi
	if [ "${RC_CMD}" != "restart" ] ; then
		checkconfig || return $?
	fi
	# Taken from PostgreSQL init script
	# Set the proper permission for the socket paths and create it if
	# it doesn't exist.
	set -f; IFS=','
	local s
	for s in ${PG_SOCKET_DIRECTORIES}; do
		checkpath -d -m 1775 -o root:postgres "${s}"
		if [ -e "${s%/}/.s.PGSQL.${configured_port}" ] ; then
			eerror "Socket conflict."
			eerror "A server is already listening on:"
			eerror "    ${s%/}/.s.PGSQL.${configured_port}"
			eerror "HINT: Change PGPORT to listen on a different socket."
			return 1
		fi
	done
	set +f; unset IFS
}

reload() {
	ebegin "Reloading ${RC_SVCNAME}"
	start-stop-daemon --signal HUP --pidfile "${pidfile}"
	eend $?
}

